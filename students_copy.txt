Red HTML Color Names
Color	Name	Hex Code	RGB Code
IndianRed	#CD5C5C	rgb(205, 92, 92)
LightCoral	#F08080	rgb(240, 128, 128)
Salmon	#FA8072	rgb(250, 128, 114)
DarkSalmon	#E9967A	rgb(233, 150, 122)
LightSalmon	#FFA07A	rgb(255, 160, 122)
Crimson	#DC143C	rgb(220, 20, 60)
Red	#FF0000	rgb(255, 0, 0)
FireBrick	#B22222	rgb(178, 34, 34)
DarkRed	#8B0000	rgb(139, 0, 0)
Pink HTML Color Names
Color	Name	Hex Code	RGB Code
Pink	#FFC0CB	rgb(255, 192, 203)
LightPink	#FFB6C1	rgb(255, 182, 193)
HotPink	#FF69B4	rgb(255, 105, 180)
DeepPink	#FF1493	rgb(255, 20, 147)
MediumVioletRed	#C71585	rgb(199, 21, 133)
PaleVioletRed	#DB7093	rgb(219, 112, 147)
Orange HTML Color Names
Color	Name	Hex Code	RGB Code
LightSalmon	#FFA07A	rgb(255, 160, 122)
Coral	#FF7F50	rgb(255, 127, 80)
Tomato	#FF6347	rgb(255, 99, 71)
OrangeRed	#FF4500	rgb(255, 69, 0)
DarkOrange	#FF8C00	rgb(255, 140, 0)
Orange	#FFA500	rgb(255, 165, 0)
Yellow HTML Color Names
Color	Name	Hex Code	RGB Code
Gold	#FFD700	rgb(255, 215, 0)
Yellow	#FFFF00	rgb(255, 255, 0)
LightYellow	#FFFFE0	rgb(255, 255, 224)
LemonChiffon	#FFFACD	rgb(255, 250, 205)
LightGoldenrodYellow	#FAFAD2	rgb(250, 250, 210)
PapayaWhip	#FFEFD5	rgb(255, 239, 213)
Moccasin	#FFE4B5	rgb(255, 228, 181)
PeachPuff	#FFDAB9	rgb(255, 218, 185)
PaleGoldenrod	#EEE8AA	rgb(238, 232, 170)
Khaki	#F0E68C	rgb(240, 230, 140)
DarkKhaki	#BDB76B	rgb(189, 183, 107)
Purple HTML Color Names
Color	Name	Hex Code	RGB Code
Lavender	#E6E6FA	rgb(230, 230, 250)
Thistle	#D8BFD8	rgb(216, 191, 216)
Plum	#DDA0DD	rgb(221, 160, 221)
Violet	#EE82EE	rgb(238, 130, 238)
Orchid	#DA70D6	rgb(218, 112, 214)
Fuchsia	#FF00FF	rgb(255, 0, 255)
Magenta	#FF00FF	rgb(255, 0, 255)
MediumOrchid	#BA55D3	rgb(186, 85, 211)
MediumPurple	#9370DB	rgb(147, 112, 219)
RebeccaPurple	#663399	rgb(102, 51, 153)
BlueViolet	#8A2BE2	rgb(138, 43, 226)
DarkViolet	#9400D3	rgb(148, 0, 211)
DarkOrchid	#9932CC	rgb(153, 50, 204)
DarkMagenta	#8B008B	rgb(139, 0, 139)
Purple	#800080	rgb(128, 0, 128)
Indigo	#4B0082	rgb(75, 0, 130)
SlateBlue	#6A5ACD	rgb(106, 90, 205)
DarkSlateBlue	#483D8B	rgb(72, 61, 139)
MediumSlateBlue	#7B68EE	rgb(123, 104, 238)
Green HTML Color Names
Color	Name	Hex Code	RGB Code
GreenYellow	#ADFF2F	rgb(173, 255, 47)
Chartreuse	#7FFF00	rgb(127, 255, 0)
LawnGreen	#7CFC00	rgb(124, 252, 0)
Lime	#00FF00	rgb(0, 255, 0)
LimeGreen	#32CD32	rgb(50, 205, 50)
PaleGreen	#98FB98	rgb(152, 251, 152)
LightGreen	#90EE90	rgb(144, 238, 144)
MediumSpringGreen	#00FA9A	rgb(0, 250, 154)
SpringGreen	#00FF7F	rgb(0, 255, 127)
MediumSeaGreen	#3CB371	rgb(60, 179, 113)
SeaGreen	#2E8B57	rgb(46, 139, 87)
ForestGreen	#228B22	rgb(34, 139, 34)
Green	#008000	rgb(0, 128, 0)
DarkGreen	#006400	rgb(0, 100, 0)
YellowGreen	#9ACD32	rgb(154, 205, 50)
OliveDrab	#6B8E23	rgb(107, 142, 35)
Olive	#808000	rgb(128, 128, 0)
DarkOliveGreen	#556B2F	rgb(85, 107, 47)
MediumAquamarine	#66CDAA	rgb(102, 205, 170)
DarkSeaGreen	#8FBC8B	rgb(143, 188, 139)
LightSeaGreen	#20B2AA	rgb(32, 178, 170)
DarkCyan	#008B8B	rgb(0, 139, 139)
Teal	#008080	rgb(0, 128, 128)
Blue HTML Color Names
Color	Name	Hex Code	RGB Code
Aqua	#00FFFF	rgb(0, 255, 255)
Cyan	#00FFFF	rgb(0, 255, 255)
LightCyan	#E0FFFF	rgb(224, 255, 255)
PaleTurquoise	#AFEEEE	rgb(175, 238, 238)
Aquamarine	#7FFFD4	rgb(127, 255, 212)
Turquoise	#40E0D0	rgb(64, 224, 208)
MediumTurquoise	#48D1CC	rgb(72, 209, 204)
DarkTurquoise	#00CED1	rgb(0, 206, 209)
CadetBlue	#5F9EA0	rgb(95, 158, 160)
SteelBlue	#4682B4	rgb(70, 130, 180)
LightSteelBlue	#B0C4DE	rgb(176, 196, 222)
PowderBlue	#B0E0E6	rgb(176, 224, 230)
LightBlue	#ADD8E6	rgb(173, 216, 230)
SkyBlue	#87CEEB	rgb(135, 206, 235)
LightSkyBlue	#87CEFA	rgb(135, 206, 250)
DeepSkyBlue	#00BFFF	rgb(0, 191, 255)
DodgerBlue	#1E90FF	rgb(30, 144, 255)
CornflowerBlue	#6495ED	rgb(100, 149, 237)
MediumSlateBlue	#7B68EE	rgb(123, 104, 238)
RoyalBlue	#4169E1	rgb(65, 105, 225)
Blue	#0000FF	rgb(0, 0, 255)
MediumBlue	#0000CD	rgb(0, 0, 205)
DarkBlue	#00008B	rgb(0, 0, 139)
Navy	#000080	rgb(0, 0, 128)
MidnightBlue	#191970	rgb(25, 25, 112)
Brown HTML Color Names
Color	Name	Hex Code	RGB Code
Cornsilk	#FFF8DC	rgb(255, 248, 220)
BlanchedAlmond	#FFEBCD	rgb(255, 235, 205)
Bisque	#FFE4C4	rgb(255, 228, 196)
NavajoWhite	#FFDEAD	rgb(255, 222, 173)
Wheat	#F5DEB3	rgb(245, 222, 179)
BurlyWood	#DEB887	rgb(222, 184, 135)
Tan	#D2B48C	rgb(210, 180, 140)
RosyBrown	#BC8F8F	rgb(188, 143, 143)
SandyBrown	#F4A460	rgb(244, 164, 96)
Goldenrod	#DAA520	rgb(218, 165, 32)
DarkGoldenrod	#B8860B	rgb(184, 134, 11)
Peru	#CD853F	rgb(205, 133, 63)
Chocolate	#D2691E	rgb(210, 105, 30)
SaddleBrown	#8B4513	rgb(139, 69, 19)
Sienna	#A0522D	rgb(160, 82, 45)
Brown	#A52A2A	rgb(165, 42, 42)
Maroon	#800000	rgb(128, 0, 0)
White HTML Color Names
Color	Name	Hex Code	RGB Code
White	#FFFFFF	rgb(255, 255, 255)
Snow	#FFFAFA	rgb(255, 250, 250)
HoneyDew	#F0FFF0	rgb(240, 255, 240)
MintCream	#F5FFFA	rgb(245, 255, 250)
Azure	#F0FFFF	rgb(240, 255, 255)
AliceBlue	#F0F8FF	rgb(240, 248, 255)
GhostWhite	#F8F8FF	rgb(248, 248, 255)
WhiteSmoke	#F5F5F5	rgb(245, 245, 245)
SeaShell	#FFF5EE	rgb(255, 245, 238)
Beige	#F5F5DC	rgb(245, 245, 220)
OldLace	#FDF5E6	rgb(253, 245, 230)
FloralWhite	#FFFAF0	rgb(255, 250, 240)
Ivory	#FFFFF0	rgb(255, 255, 240)
AntiqueWhite	#FAEBD7	rgb(250, 235, 215)
Linen	#FAF0E6	rgb(250, 240, 230)
LavenderBlush	#FFF0F5	rgb(255, 240, 245)
MistyRose	#FFE4E1	rgb(255, 228, 225)
Gray HTML Color Names
Color	Name	Hex Code	RGB Code
Gainsboro	#DCDCDC	rgb(220, 220, 220)
LightGray	#D3D3D3	rgb(211, 211, 211)
Silver	#C0C0C0	rgb(192, 192, 192)
DarkGray	#A9A9A9	rgb(169, 169, 169)
Gray	#808080	rgb(128, 128, 128)
DimGray	#696969	rgb(105, 105, 105)
LightSlateGray	#778899	rgb(119, 136, 153)
SlateGray	#708090	rgb(112, 128, 144)
DarkSlateGray	#2F4F4F	rgb(47, 79, 79)
Black	#000000	rgb(0, 0, 0)
How to use HTML color names
Just like Hex color codes, HTML color names can be used with inline HTML styles or in a separate CSS stylesheet.

HTML

<!-- In your HTML document -->
<body>
  <h1 style="color:IndianRed">Indian Red Title Text</h1>
  <p style="color:SlateGray">Slate gray paragraph text</p>
</body>
CSS

/* In your .css stylesheet */
h1 { color: IndianRed; }
p { color: SlateGray; }
Task 1: Add the setup() function
*/
function setup() {
  createCanvas(600, 400);
  background(50);// 0 to 255 gray tone
}
function draw() {
  // Challenge 1: An eye using ellipse() function
  fill("hotpink");
  ellipse(300, 200, 100, 100);
  

  fill(255, 0, 0);
  ellipse(300, 200, 200, 200);

  // Challenge 2: A face using circle() function
  fill(255, 220, 185);
  ellipse(300, 200, 200, 200);

  // Challenge 3: A house using rect() function
  fill(150, 75, 0);

  fill(255, 0, 0);
  ellipse(300, 200, 200, 200);

  // Challenge 4: A face using circle() function
  fill(255, 220, 185);
  ellipse(300, 200, 200, 200);

  // Challenge 5: A house using rect() function
  fill(150, 75, 0);
  rect(200, 200, 200, 200);
  fill(255, 0, 0);
  triangle(200, 200, 400, 200, 300, 100);

  // Challenge 6: A rocketship using triangle() function
  fill(200, 0, 0);
  triangle(250, 100, 350, 100, 300, 50);
  fill(150, 150, 150);
  rect(250, 100, 100, 200);
  // Challenge 7: A square face using quad() function
  fill(255, 220, 185);
  quad(200, 200, 400, 200, 400, 400
, 200, 400);
  fill(0, 0, 0);
  ellipse(250, 250, 30, 30); // Left eye
  ellipse(350, 250, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(300, 300, 50, 20); // Mouth
  fill(255, 255, 0);
  ellipse(300, 350, 100, 50); // Belly
  fill(255, 0, 0);
  ellipse(250, 250, 30, 30); // Left cheek
  ellipse(350, 250, 30, 30); // Right cheek
  // Challenge 7: Create a funny Pokemon using the functions you have learned
  fill(255, 255, 0);
  ellipse(300, 300, 150, 150); // Body
  fill(0, 0, 0);
  ellipse(270, 280, 30, 30); // Left eye
  ellipse(330, 280, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(300, 320, 50, 20); // Mouth
  fill(0, 255, 0);
  ellipse(300, 350, 100, 50); // Belly
  fill(255, 0, 0);
  ellipse(250, 250, 30, 30); // Left cheek
  ellipse(350, 250, 30, 30); // Right cheek
  
 
  // Challenge 8: Create a funny face using the functions you have learned
  fill(255, 220, 185);
  ellipse(500, 200, 200, 200); // Face
  fill(0, 0, 0);
  ellipse(470, 180, 30, 30); // Left eye
  ellipse(530, 180, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(500, 220, 50, 20); // Mouth
  fill(255, 255, 0);
  ellipse(500, 250, 100, 50); // Nose
  fill(0, 0, 255);
  ellipse(450, 150, 30, 30); // Left ear
  ellipse(550, 150, 30, 30); // Right ear
  // Challenge 5: A square face using quad() function
  fill(255, 220, 185);
  quad(200, 200, 400, 200, 400, 400, 200, 400);
  fill(0, 0, 0);
  ellipse(250, 250, 30, 30); // Left eye
  ellipse(350, 250, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(300, 300, 50, 20); // Mouth
  fill(255, 255, 0);
  ellipse(300, 350, 100, 50); // Belly
  fill(255, 0, 0);
  ellipse(250, 250, 30, 30); // Left cheek
  ellipse(350, 250, 30, 30); // Right cheek

  // Challenge 6: Add some colours to the drawings in the above challenges
  fill(255, 0, 0);
  ellipse(300, 200, 200, 200);
  fill(0, 255, 0);
  ellipse(300, 200, 150, 150);
  fill(0, 0, 255);
  ellipse(300, 200, 100, 100);
  fill(255, 255, 0);
  ellipse(300, 200, 50, 50);
  fill(0, 0, 0);
  ellipse(300, 200, 25, 25); // Center of the eye
  fill(255, 0, 0);
  ellipse(300, 200, 200, 200);
  fill(0, 255, 0);
  ellipse(300, 200, 150, 150);
  fill(0, 0, 255);
  ellipse(300, 200, 100, 100);
  fill(255, 255, 0);
  ellipse(300, 200, 50, 50);
  fill(0, 0, 0);
  ellipse(300, 200, 25, 25); // Center of the eye


  // Challenge 7: Create a funny Pokemon using the functions you have learned
  fill(255, 255, 0);  
  ellipse(300, 300, 150, 150); // Body
  fill(0, 0, 0);
  ellipse(270, 280, 30, 30); // Left eye
  ellipse(330, 280, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(300, 320, 50, 20); // Mouth
  fill(0, 255, 0);
  ellipse(300, 350, 100, 50); // Belly
  fill(255, 0, 0);
  ellipse(250, 250, 30, 30); // Left cheek
  ellipse(350, 250, 30, 30); // Right cheek
  
  // Challenge 8: Create a funny face using the functions you have learned
  fill(255, 220, 185);
  ellipse(500, 200, 200, 200); // Face
  fill(0, 0, 0);
  ellipse(470, 180, 30, 30); // Left eye
  ellipse(530, 180, 30, 30); // Right eye
  fill(255, 0, 0);
  ellipse(500, 220, 50, 20); // Mouth
  fill(255, 255, 0);
  ellipse(500, 250, 100, 50); // Nose
  fill(0, 0, 255);
  ellipse(450, 150, 30, 30); // Left ear
  ellipse(550, 150, 30, 30); // Right ear
  
}
Summary of Syntax:
Ellipse: ellipse(x, y, w, h)

Rectangle: rect(x, y, w, h)

Quad: quad(x1, y1, x2, y2, x3, y3, x4, y4)

Triangle: triangle(x1, y1, x2, y2, x3, y3)

Circle: circle(x, y, d)
for(let i =1; i < 11; i++)
let colorValue = 0; // start from black
function draw() {}
  fill (colorValue, 0, 0);
  circle






















<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Geometry Dash Clone</title>
  <style>
    canvas {
      background: #222;
      display: block;
      margin: 0 auto;
    }
    body {
      margin: 0;
      overflow: hidden;
    }
  </style>
</head>
<body>
<canvas id="gameCanvas" width="800" height="400"></canvas>
<script>
const canvas = document.getElementById("gameCanvas"), ctx = canvas.getContext("2d");
let player = { x: 50, y: 300, width: 20, height: 20, dy: 0, gravity: 0.8, jumpForce: -12, grounded: false }, frame = 0, difficulty = 1, score = 0;
const playerImg = new Image(); playerImg.src = 'playerTexture.png'; // replace with your image
const jumpSound = new Audio('jump.mp3'), crashSound = new Audio('crash.mp3'), bgMusic = new Audio('bgMusic.mp3');
bgMusic.loop = true; bgMusic.volume = 0.5; bgMusic.play();

let obstacles = [{ x: 400, width: 20, height: 40 }, { x: 800, width: 30, height: 60, moving: true }];
let portals = [{ x: 700, y: 300, width: 20, height: 20 }];

document.addEventListener("keydown", e => {
  if (e.code === "Space" || e.code === "ArrowUp") {
    if (player.grounded) {
      player.dy = player.jumpForce;
      player.grounded = false;
      jumpSound.play();
    }
  }
});

setInterval(() => difficulty++, 10000); // ramp up every 10s

function update() {
  player.dy += player.gravity;
  player.y += player.dy;
  if (player.y + player.height >= canvas.height) {
    player.y = canvas.height - player.height;
    player.dy = 0;
    player.grounded = true;
  }

  for (let obs of obstacles) {
    obs.x -= 3 + difficulty;
    if (obs.moving) obs.height += Math.sin(Date.now() / 200) * 2;
    if (obs.x + obs.width < 0) {
      obs.x = canvas.width + Math.random() * 400;
      score++;
    }
    if (player.x < obs.x + obs.width && player.x + player.width > obs.x &&
        player.y + player.height > canvas.height - obs.height) {
      crashSound.play();
      alert("Game Over! Score: " + score);
      document.location.reload();
    }
  }

  for (let p of portals) {
    p.x -= 3 + difficulty;
    if (player.x < p.x + p.width && player.x + player.width > p.x &&
        player.y < p.y + p.height && player.y + player.height > p.y) {
      player.x = 50;
      p.x = canvas.width + Math.random() * 400;
    }
  }
}

function drawPlayer() {
  ctx.drawImage(playerImg, player.x, player.y, player.width, player.height);
}

function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawPlayer();
  ctx.fillStyle = "black";
  for (let obs of obstacles)
    ctx.fillRect(obs.x, canvas.height - obs.height, obs.width, obs.height);
  ctx.fillStyle = "blue";
  for (let p of portals)
    ctx.fillRect(p.x, p.y, p.width, p.height);
  ctx.fillStyle = "white";
  ctx.font = "16px Arial";
  ctx.fillText("Score: " + score, 10, 20);
}

function gameLoop() {
  update();
  draw();
  requestAnimationFrame(gameLoop);
}

gameLoop();
</script>
</body>
</html>
